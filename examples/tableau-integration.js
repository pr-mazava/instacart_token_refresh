/**
 * ================================================================================
 * MAZAVA CONSULTING - TABLEAU WEB DATA CONNECTOR FOR INSTACART ADS API
 * ================================================================================
 *
 * This Tableau Web Data Connector (WDC) enables direct integration between
 * Instacart Ads API and Tableau using refresh tokens generated by the
 * instacart_refresh_token.py utility.
 *
 * Author: Paul Rakotoarisoa <paul@mazavaltd.com>
 * Company: Mazava Consulting
 * Version: 1.0.0
 *
 * Usage:
 * 1. Host this file on a web server accessible to Tableau
 * 2. Use refresh token from instacart_refresh_token.py
 * 3. Connect via Tableau Desktop: Data > Web Data Connector
 *
 * #AnalyzeResponsibly
 * ================================================================================
 */

(function () {
  "use strict";

  // Configuration
  const CONFIG = {
    INSTACART_AUTH_URL: "https://api.ads.instacart.com/oauth/token",
    INSTACART_API_BASE: "https://api.ads.instacart.com/api/v2",
    MAX_RETRIES: 3,
    TIMEOUT_MS: 30000,
  };

  var myConnector = tableau.makeConnector();

  /**
   * Define the data schema for Tableau
   */
  myConnector.getSchema = function (schemaCallback) {
    var campaignSchema = {
      id: "instacart_campaigns",
      alias: "Instacart Campaign Performance",
      columns: [
        { id: "date", dataType: tableau.dataTypeEnum.date },
        { id: "campaign_id", dataType: tableau.dataTypeEnum.string },
        { id: "campaign_name", dataType: tableau.dataTypeEnum.string },
        { id: "campaign_status", dataType: tableau.dataTypeEnum.string },
        { id: "budget", dataType: tableau.dataTypeEnum.float },
        { id: "spend", dataType: tableau.dataTypeEnum.float },
        { id: "impressions", dataType: tableau.dataTypeEnum.int },
        { id: "clicks", dataType: tableau.dataTypeEnum.int },
        { id: "ctr", dataType: tableau.dataTypeEnum.float },
        { id: "cpc", dataType: tableau.dataTypeEnum.float },
        { id: "conversions", dataType: tableau.dataTypeEnum.int },
        { id: "sales", dataType: tableau.dataTypeEnum.float },
        { id: "roas", dataType: tableau.dataTypeEnum.float },
      ],
    };

    var productSchema = {
      id: "instacart_products",
      alias: "Instacart Product Performance",
      columns: [
        { id: "date", dataType: tableau.dataTypeEnum.date },
        { id: "product_id", dataType: tableau.dataTypeEnum.string },
        { id: "product_name", dataType: tableau.dataTypeEnum.string },
        { id: "campaign_id", dataType: tableau.dataTypeEnum.string },
        { id: "campaign_name", dataType: tableau.dataTypeEnum.string },
        { id: "spend", dataType: tableau.dataTypeEnum.float },
        { id: "impressions", dataType: tableau.dataTypeEnum.int },
        { id: "clicks", dataType: tableau.dataTypeEnum.int },
        { id: "conversions", dataType: tableau.dataTypeEnum.int },
        { id: "sales", dataType: tableau.dataTypeEnum.float },
        { id: "units_sold", dataType: tableau.dataTypeEnum.int },
      ],
    };

    schemaCallback([campaignSchema, productSchema]);
  };

  /**
   * Authenticate with Instacart API using refresh token
   */
  function authenticateInstacart(refreshToken, clientId, clientSecret) {
    return new Promise(function (resolve, reject) {
      var authData = {
        client_id: clientId,
        client_secret: clientSecret,
        refresh_token: refreshToken,
        grant_type: "refresh_token",
      };

      $.ajax({
        url: CONFIG.INSTACART_AUTH_URL,
        type: "POST",
        contentType: "application/json",
        data: JSON.stringify(authData),
        timeout: CONFIG.TIMEOUT_MS,
        success: function (response) {
          if (response.access_token) {
            resolve(response.access_token);
          } else {
            reject("No access token in response");
          }
        },
        error: function (xhr, status, error) {
          reject("Authentication failed: " + error);
        },
      });
    });
  }

  /**
   * Make authenticated API request with retry logic
   */
  function makeInstacartRequest(endpoint, accessToken, params, retryCount = 0) {
    return new Promise(function (resolve, reject) {
      var url = CONFIG.INSTACART_API_BASE + endpoint;

      $.ajax({
        url: url,
        type: "POST",
        headers: {
          Authorization: "Bearer " + accessToken,
          "Content-Type": "application/json",
        },
        data: JSON.stringify(params),
        timeout: CONFIG.TIMEOUT_MS,
        success: function (response) {
          resolve(response);
        },
        error: function (xhr, status, error) {
          if (retryCount < CONFIG.MAX_RETRIES && xhr.status >= 500) {
            // Retry on server errors
            setTimeout(function () {
              makeInstacartRequest(
                endpoint,
                accessToken,
                params,
                retryCount + 1
              )
                .then(resolve)
                .catch(reject);
            }, Math.pow(2, retryCount) * 1000); // Exponential backoff
          } else {
            reject("API request failed: " + error);
          }
        },
      });
    });
  }

  /**
   * Get date range for API requests
   */
  function getDateRange() {
    var endDate = new Date();
    endDate.setDate(endDate.getDate() - 1); // Yesterday

    var startDate = new Date();
    startDate.setDate(startDate.getDate() - 30); // 30 days ago

    return {
      start_date: startDate.toISOString().split("T")[0],
      end_date: endDate.toISOString().split("T")[0],
    };
  }

  /**
   * Fetch campaign data from Instacart API
   */
  function fetchCampaignData(accessToken) {
    var dateRange = getDateRange();
    var requestBody = {
      date_range: dateRange,
      segment: "day",
      sort_by: "date_asc",
      filters: {
        spend: true,
      },
    };

    return makeInstacartRequest("/reports/campaigns", accessToken, requestBody);
  }

  /**
   * Fetch product data from Instacart API
   */
  function fetchProductData(accessToken) {
    var dateRange = getDateRange();
    var requestBody = {
      date_range: dateRange,
      segment: "day",
      sort_by: "date_asc",
      filters: {
        spend: true,
      },
    };

    return makeInstacartRequest("/reports/products", accessToken, requestBody);
  }

  /**
   * Transform campaign data for Tableau
   */
  function transformCampaignData(apiData) {
    var tableauData = [];

    if (apiData && apiData.data && Array.isArray(apiData.data)) {
      apiData.data.forEach(function (row) {
        if (Array.isArray(row) && row.length >= 13) {
          tableauData.push({
            date: row[0],
            campaign_id: row[1] || "",
            campaign_name: row[2] || "",
            campaign_status: row[3] || "",
            budget: parseFloat(row[4]) || 0,
            spend: parseFloat(row[5]) || 0,
            impressions: parseInt(row[6]) || 0,
            clicks: parseInt(row[7]) || 0,
            ctr: parseFloat(row[8]) || 0,
            cpc: parseFloat(row[9]) || 0,
            conversions: parseInt(row[10]) || 0,
            sales: parseFloat(row[11]) || 0,
            roas: parseFloat(row[12]) || 0,
          });
        }
      });
    }

    return tableauData;
  }

  /**
   * Transform product data for Tableau
   */
  function transformProductData(apiData) {
    var tableauData = [];

    if (apiData && apiData.data && Array.isArray(apiData.data)) {
      apiData.data.forEach(function (row) {
        if (Array.isArray(row) && row.length >= 11) {
          tableauData.push({
            date: row[0],
            product_id: row[1] || "",
            product_name: row[2] || "",
            campaign_id: row[3] || "",
            campaign_name: row[4] || "",
            spend: parseFloat(row[5]) || 0,
            impressions: parseInt(row[6]) || 0,
            clicks: parseInt(row[7]) || 0,
            conversions: parseInt(row[8]) || 0,
            sales: parseFloat(row[9]) || 0,
            units_sold: parseInt(row[10]) || 0,
          });
        }
      });
    }

    return tableauData;
  }

  /**
   * Main data fetching function
   */
  myConnector.getData = function (table, doneCallback) {
    // Get connection data from Tableau
    var connectionData = JSON.parse(tableau.connectionData || "{}");
    var refreshToken = connectionData.refreshToken;
    var clientId = connectionData.clientId;
    var clientSecret = connectionData.clientSecret;

    if (!refreshToken || !clientId || !clientSecret) {
      tableau.abortWithError(
        "Missing required credentials. Please check your connection setup."
      );
      return;
    }

    // Authenticate with Instacart
    authenticateInstacart(refreshToken, clientId, clientSecret)
      .then(function (accessToken) {
        tableau.log("Successfully authenticated with Instacart API");

        if (table.tableInfo.id === "instacart_campaigns") {
          return fetchCampaignData(accessToken).then(function (apiData) {
            var tableauData = transformCampaignData(apiData);
            table.appendRows(tableauData);
            tableau.log("Loaded " + tableauData.length + " campaign records");
            doneCallback();
          });
        } else if (table.tableInfo.id === "instacart_products") {
          return fetchProductData(accessToken).then(function (apiData) {
            var tableauData = transformProductData(apiData);
            table.appendRows(tableauData);
            tableau.log("Loaded " + tableauData.length + " product records");
            doneCallback();
          });
        } else {
          tableau.abortWithError("Unknown table: " + table.tableInfo.id);
        }
      })
      .catch(function (error) {
        tableau.log("Error: " + error);
        tableau.abortWithError("Failed to fetch data: " + error);
      });
  };

  /**
   * Register the connector
   */
  tableau.registerConnector(myConnector);

  /**
   * Setup UI for connection parameters
   */
  $(document).ready(function () {
    // Create simple form for connection setup
    var html = `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 50px auto; padding: 20px;">
                <h1>Instacart Ads API - Tableau Connector</h1>
                <p>Enter your Instacart API credentials below. Use the refresh token generated by the <code>instacart_refresh_token.py</code> utility.</p>
                
                <form id="connectionForm">
                    <div style="margin-bottom: 15px;">
                        <label for="refreshToken" style="display: block; margin-bottom: 5px;"><strong>Refresh Token:</strong></label>
                        <input type="password" id="refreshToken" placeholder="Your refresh token from the utility script" 
                               style="width: 100%; padding: 8px; font-size: 14px;" required>
                    </div>
                    
                    <div style="margin-bottom: 15px;">
                        <label for="clientId" style="display: block; margin-bottom: 5px;"><strong>Client ID:</strong></label>
                        <input type="text" id="clientId" placeholder="Your Instacart API Client ID" 
                               style="width: 100%; padding: 8px; font-size: 14px;" required>
                    </div>
                    
                    <div style="margin-bottom: 15px;">
                        <label for="clientSecret" style="display: block; margin-bottom: 5px;"><strong>Client Secret:</strong></label>
                        <input type="password" id="clientSecret" placeholder="Your Instacart API Client Secret" 
                               style="width: 100%; padding: 8px; font-size: 14px;" required>
                    </div>
                    
                    <button type="submit" id="submitButton" 
                            style="background: #1f77b4; color: white; padding: 10px 20px; border: none; border-radius: 4px; font-size: 16px; cursor: pointer;">
                        Connect to Instacart
                    </button>
                </form>
                
                <div style="margin-top: 30px; padding: 15px; background: #f8f9fa; border-radius: 4px;">
                    <h3>Setup Instructions:</h3>
                    <ol>
                        <li>Use <code>instacart_refresh_token.py</code> to generate your refresh token</li>
                        <li>Enter your credentials above</li>
                        <li>Click "Connect to Instacart"</li>
                        <li>Tableau will load campaign and product performance data</li>
                    </ol>
                </div>
                
                <footer style="margin-top: 40px; text-align: center; color: #666; font-size: 12px;">
                    Built For Impact by <a href="https://mazavaltd.com">Mazava Consulting</a> | #AnalyzeResponsibly
                </footer>
            </div>
        `;

    $("body").html(html);

    // Handle form submission
    $("#connectionForm").submit(function (e) {
      e.preventDefault();

      var refreshToken = $("#refreshToken").val().trim();
      var clientId = $("#clientId").val().trim();
      var clientSecret = $("#clientSecret").val().trim();

      if (!refreshToken || !clientId || !clientSecret) {
        alert("Please fill in all required fields.");
        return;
      }

      // Store connection data
      var connectionData = {
        refreshToken: refreshToken,
        clientId: clientId,
        clientSecret: clientSecret,
      };

      tableau.connectionData = JSON.stringify(connectionData);
      tableau.connectionName = "Instacart Ads API";

      // Submit to Tableau
      tableau.submit();
    });
  });
})();
